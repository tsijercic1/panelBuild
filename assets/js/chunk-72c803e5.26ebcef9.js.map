{"version":3,"sources":["webpack:///../../../src/components/VExpansionPanel/VExpansionPanels.ts","webpack:///../../../src/components/VExpansionPanel/VExpansionPanelContent.ts","webpack:///./src/views/Course.vue?a993","webpack:///src/views/Course.vue","webpack:///./src/views/Course.vue?f022","webpack:///./src/views/Course.vue","webpack:///../../../src/components/VExpansionPanel/VExpansionPanelHeader.ts","webpack:///../../../src/components/VExpansionPanel/VExpansionPanel.ts"],"names":["name","provide","expansionPanels","this","props","accordion","disabled","flat","hover","focusable","inset","popout","readonly","tile","Boolean","computed","classes","created","$attrs","hasOwnProperty","Array","value","length","methods","updateItem","getValue","item","nextValue","index","toggleMethod","baseMixins","isActive","expansionPanel","beforeDestroy","render","h","showLazyContent","staticClass","directives","class","_vm","_h","$createElement","_c","_self","_v","_s","undefined","course","attrs","_l","groupsForCourseId","id","group","key","Object","keys","membersOfGroupByGroupIdAndCourseId","member","members","staticRenderFns","data","connection","$store","getters","courseById","$route","params","course_id","mounted","dispatch","component","VCard","VCol","VContainer","VExpansionPanel","VExpansionPanelContent","VExpansionPanelHeader","VExpansionPanels","VRow","ripple","disableIconRotate","expandIcon","type","default","hideActions","hasMousedown","isDisabled","isReadonly","onClick","genIcon","icon","setBackgroundColor","tabindex","on","click","mousedown","mouseup","open","content","header","nextIsActive","groupClasses","registerContent","unregisterContent","registerHeader","vm","unregisterHeader","e","toggle","isBooted","String"],"mappings":"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","file":"assets/js/chunk-72c803e5.26ebcef9.js","sourcesContent":["// Styles\nimport './VExpansionPanel.sass'\n\n// Components\nimport { BaseItemGroup, GroupableInstance } from '../VItemGroup/VItemGroup'\nimport VExpansionPanel from './VExpansionPanel'\n\n// Utilities\nimport { breaking } from '../../util/console'\n\n// Types\ninterface VExpansionPanelInstance extends InstanceType<typeof VExpansionPanel> {}\n\n/* @vue/component */\nexport default BaseItemGroup.extend({\n  name: 'v-expansion-panels',\n\n  provide (): object {\n    return {\n      expansionPanels: this,\n    }\n  },\n\n  props: {\n    accordion: Boolean,\n    disabled: Boolean,\n    flat: Boolean,\n    hover: Boolean,\n    focusable: Boolean,\n    inset: Boolean,\n    popout: Boolean,\n    readonly: Boolean,\n    tile: Boolean,\n  },\n\n  computed: {\n    classes (): object {\n      return {\n        ...BaseItemGroup.options.computed.classes.call(this),\n        'v-expansion-panels': true,\n        'v-expansion-panels--accordion': this.accordion,\n        'v-expansion-panels--flat': this.flat,\n        'v-expansion-panels--hover': this.hover,\n        'v-expansion-panels--focusable': this.focusable,\n        'v-expansion-panels--inset': this.inset,\n        'v-expansion-panels--popout': this.popout,\n        'v-expansion-panels--tile': this.tile,\n      }\n    },\n  },\n\n  created () {\n    /* istanbul ignore next */\n    if (this.$attrs.hasOwnProperty('expand')) {\n      breaking('expand', 'multiple', this)\n    }\n\n    /* istanbul ignore next */\n    if (\n      Array.isArray(this.value) &&\n      this.value.length > 0 &&\n      typeof this.value[0] === 'boolean'\n    ) {\n      breaking(':value=\"[true, false, true]\"', ':value=\"[0, 2]\"', this)\n    }\n  },\n\n  methods: {\n    updateItem (item: GroupableInstance & VExpansionPanelInstance, index: number) {\n      const value = this.getValue(item, index)\n      const nextValue = this.getValue(item, index + 1)\n\n      item.isActive = this.toggleMethod(value)\n      item.nextIsActive = this.toggleMethod(nextValue)\n    },\n  },\n})\n","// Components\nimport VExpansionPanel from './VExpansionPanel'\nimport { VExpandTransition } from '../transitions'\n\n// Mixins\nimport Bootable from '../../mixins/bootable'\nimport Colorable from '../../mixins/colorable'\nimport { inject as RegistrableInject } from '../../mixins/registrable'\n\n// Utilities\nimport { getSlot } from '../../util/helpers'\nimport mixins, { ExtractVue } from '../../util/mixins'\n\n// Types\nimport Vue, { VNode, VueConstructor } from 'vue'\n\nconst baseMixins = mixins(\n  Bootable,\n  Colorable,\n  RegistrableInject<'expansionPanel', VueConstructor<Vue>>('expansionPanel', 'v-expansion-panel-content', 'v-expansion-panel')\n)\n\ninterface options extends ExtractVue<typeof baseMixins> {\n  expansionPanel: InstanceType<typeof VExpansionPanel>\n}\n\n/* @vue/component */\nexport default baseMixins.extend<options>().extend({\n  name: 'v-expansion-panel-content',\n\n  computed: {\n    isActive (): boolean {\n      return this.expansionPanel.isActive\n    },\n  },\n\n  created () {\n    this.expansionPanel.registerContent(this)\n  },\n\n  beforeDestroy () {\n    this.expansionPanel.unregisterContent()\n  },\n\n  render (h): VNode {\n    return h(VExpandTransition, this.showLazyContent(() => [\n      h('div', this.setBackgroundColor(this.color, {\n        staticClass: 'v-expansion-panel-content',\n        directives: [{\n          name: 'show',\n          value: this.isActive,\n        }],\n      }), [\n        h('div', { class: 'v-expansion-panel-content__wrap' }, getSlot(this)),\n      ]),\n    ]))\n  },\n})\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('v-container',[_c('h1',{staticClass:\"mb-4\"},[_vm._v(_vm._s(_vm.course.name === undefined ? \"\" : _vm.course.name))]),_c('v-expansion-panels',{attrs:{\"accordion\":false,\"popout\":true,\"inset\":false,\"multiple\":false,\"focusable\":true,\"disabled\":false,\"readonly\":false,\"flat\":false,\"hover\":true,\"tile\":false}},_vm._l((_vm.groupsForCourseId(_vm.course.id)),function(group){return _c('v-expansion-panel',{key:group.id},[_c('v-expansion-panel-header',[_vm._v(_vm._s(group.name))]),_c('v-expansion-panel-content',[_c('v-row',{staticClass:\"pa-3\"},_vm._l((Object.keys(_vm.membersOfGroupByGroupIdAndCourseId(_vm.course.id, group.id))),function(member){return _c('v-col',{key:member,attrs:{\"cols\":\"12\",\"sm\":\"6\",\"md\":\"4\",\"lg\":\"3\",\"xl\":\"2\"}},[_c('v-card',{staticClass:\"pa-3 subtitle-2\",attrs:{\"outlined\":\"\",\"tile\":\"\"}},[_vm._v(\" \"+_vm._s(group.members[member])+\" \")])],1)}),1)],1)],1)}),1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <v-container>\n    <h1 class=\"mb-4\">{{ course.name === undefined ? \"\" : course.name}}</h1>\n    <v-expansion-panels\n        :accordion=\"false\"\n        :popout=\"true\"\n        :inset=\"false\"\n        :multiple=\"false\"\n        :focusable=\"true\"\n        :disabled=\"false\"\n        :readonly=\"false\"\n        :flat=\"false\"\n        :hover=\"true\"\n        :tile=\"false\"\n    >\n      <v-expansion-panel\n          v-for=\"group in groupsForCourseId(course.id)\"\n          :key=\"group.id\"\n      >\n        <v-expansion-panel-header>{{group.name}}</v-expansion-panel-header>\n        <v-expansion-panel-content>\n          <v-row class=\"pa-3\">\n            <v-col\n                cols=\"12\"\n                sm=\"6\"\n                md=\"4\"\n                lg=\"3\"\n                xl=\"2\"\n                v-for=\"member in Object.keys(membersOfGroupByGroupIdAndCourseId(course.id, group.id))\"\n                :key=\"member\"\n            >\n              <v-card\n                  class=\"pa-3 subtitle-2\"\n                  outlined\n                  tile\n              >\n                {{ group.members[member] }}\n              </v-card>\n            </v-col>\n          </v-row>\n        </v-expansion-panel-content>\n      </v-expansion-panel>\n    </v-expansion-panels>\n  </v-container>\n</template>\n\n<script>\n\nimport {mapGetters} from \"vuex\";\n\nexport default {\n  data() {\n    return {\n      connection: {}\n    }\n  },\n  computed: {\n    ...mapGetters([\"membersOfGroupByGroupIdAndCourseId\", \"groupsForCourseId\"]),\n    course() {\n      return this.$store.getters.courseById(this.$route.params.course_id);\n    }\n  },\n  mounted() {\n    this.$store.dispatch(\"refreshMembers\", [this.course, this]);\n  },\n  created() {\n  }\n};\n</script>\n\n<style></style>\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/vuetify-loader/lib/loader.js??ref--18-0!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Course.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/vuetify-loader/lib/loader.js??ref--18-0!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Course.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Course.vue?vue&type=template&id=477862a3&\"\nimport script from \"./Course.vue?vue&type=script&lang=js&\"\nexport * from \"./Course.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports\n\n/* vuetify-loader */\nimport installComponents from \"!../../node_modules/vuetify-loader/lib/runtime/installComponents.js\"\nimport { VCard } from 'vuetify/lib/components/VCard';\nimport { VCol } from 'vuetify/lib/components/VGrid';\nimport { VContainer } from 'vuetify/lib/components/VGrid';\nimport { VExpansionPanel } from 'vuetify/lib/components/VExpansionPanel';\nimport { VExpansionPanelContent } from 'vuetify/lib/components/VExpansionPanel';\nimport { VExpansionPanelHeader } from 'vuetify/lib/components/VExpansionPanel';\nimport { VExpansionPanels } from 'vuetify/lib/components/VExpansionPanel';\nimport { VRow } from 'vuetify/lib/components/VGrid';\ninstallComponents(component, {VCard,VCol,VContainer,VExpansionPanel,VExpansionPanelContent,VExpansionPanelHeader,VExpansionPanels,VRow})\n","// Components\nimport { VFadeTransition } from '../transitions'\nimport VExpansionPanel from './VExpansionPanel'\nimport VIcon from '../VIcon'\n\n// Mixins\nimport Colorable from '../../mixins/colorable'\nimport { inject as RegistrableInject } from '../../mixins/registrable'\n\n// Directives\nimport ripple from '../../directives/ripple'\n\n// Utilities\nimport { getSlot } from '../../util/helpers'\nimport mixins, { ExtractVue } from '../../util/mixins'\n\n// Types\nimport Vue, { VNode, VueConstructor } from 'vue'\n\nconst baseMixins = mixins(\n  Colorable,\n  RegistrableInject<'expansionPanel', VueConstructor<Vue>>('expansionPanel', 'v-expansion-panel-header', 'v-expansion-panel')\n)\n\ninterface options extends ExtractVue<typeof baseMixins> {\n  $el: HTMLElement\n  expansionPanel: InstanceType<typeof VExpansionPanel>\n}\n\nexport default baseMixins.extend<options>().extend({\n  name: 'v-expansion-panel-header',\n\n  directives: { ripple },\n\n  props: {\n    disableIconRotate: Boolean,\n    expandIcon: {\n      type: String,\n      default: '$expand',\n    },\n    hideActions: Boolean,\n    ripple: {\n      type: [Boolean, Object],\n      default: false,\n    },\n  },\n\n  data: () => ({\n    hasMousedown: false,\n  }),\n\n  computed: {\n    classes (): object {\n      return {\n        'v-expansion-panel-header--active': this.isActive,\n        'v-expansion-panel-header--mousedown': this.hasMousedown,\n      }\n    },\n    isActive (): boolean {\n      return this.expansionPanel.isActive\n    },\n    isDisabled (): boolean {\n      return this.expansionPanel.isDisabled\n    },\n    isReadonly (): boolean {\n      return this.expansionPanel.isReadonly\n    },\n  },\n\n  created () {\n    this.expansionPanel.registerHeader(this)\n  },\n\n  beforeDestroy () {\n    this.expansionPanel.unregisterHeader()\n  },\n\n  methods: {\n    onClick (e: MouseEvent) {\n      this.$emit('click', e)\n    },\n    genIcon () {\n      const icon = getSlot(this, 'actions') ||\n        [this.$createElement(VIcon, this.expandIcon)]\n\n      return this.$createElement(VFadeTransition, [\n        this.$createElement('div', {\n          staticClass: 'v-expansion-panel-header__icon',\n          class: {\n            'v-expansion-panel-header__icon--disable-rotate': this.disableIconRotate,\n          },\n          directives: [{\n            name: 'show',\n            value: !this.isDisabled,\n          }],\n        }, icon),\n      ])\n    },\n  },\n\n  render (h): VNode {\n    return h('button', this.setBackgroundColor(this.color, {\n      staticClass: 'v-expansion-panel-header',\n      class: this.classes,\n      attrs: {\n        tabindex: this.isDisabled ? -1 : null,\n        type: 'button',\n      },\n      directives: [{\n        name: 'ripple',\n        value: this.ripple,\n      }],\n      on: {\n        ...this.$listeners,\n        click: this.onClick,\n        mousedown: () => (this.hasMousedown = true),\n        mouseup: () => (this.hasMousedown = false),\n      },\n    }), [\n      getSlot(this, 'default', { open: this.isActive }, true),\n      this.hideActions || this.genIcon(),\n    ])\n  },\n})\n","// Components\nimport VExpansionPanels from './VExpansionPanels'\nimport VExpansionPanelHeader from './VExpansionPanelHeader'\nimport VExpansionPanelContent from './VExpansionPanelContent'\n\n// Mixins\nimport { factory as GroupableFactory } from '../../mixins/groupable'\nimport { provide as RegistrableProvide } from '../../mixins/registrable'\n\n// Utilities\nimport { getSlot } from '../../util/helpers'\nimport mixins from '../../util/mixins'\n\n// Types\nimport { VNode } from 'vue'\n\ntype VExpansionPanelHeaderInstance = InstanceType<typeof VExpansionPanelHeader>\ntype VExpansionPanelContentInstance = InstanceType<typeof VExpansionPanelContent>\n\nexport default mixins(\n  GroupableFactory<'expansionPanels', typeof VExpansionPanels>('expansionPanels', 'v-expansion-panel', 'v-expansion-panels'),\n  RegistrableProvide('expansionPanel', true)\n  /* @vue/component */\n).extend({\n  name: 'v-expansion-panel',\n\n  props: {\n    disabled: Boolean,\n    readonly: Boolean,\n  },\n\n  data () {\n    return {\n      content: null as VExpansionPanelContentInstance | null,\n      header: null as VExpansionPanelHeaderInstance | null,\n      nextIsActive: false,\n    }\n  },\n\n  computed: {\n    classes (): object {\n      return {\n        'v-expansion-panel--active': this.isActive,\n        'v-expansion-panel--next-active': this.nextIsActive,\n        'v-expansion-panel--disabled': this.isDisabled,\n        ...this.groupClasses,\n      }\n    },\n    isDisabled (): boolean {\n      return this.expansionPanels.disabled || this.disabled\n    },\n    isReadonly (): boolean {\n      return this.expansionPanels.readonly || this.readonly\n    },\n  },\n\n  methods: {\n    registerContent (vm: VExpansionPanelContentInstance) {\n      this.content = vm\n    },\n    unregisterContent () {\n      this.content = null\n    },\n    registerHeader (vm: VExpansionPanelHeaderInstance) {\n      this.header = vm\n      vm.$on('click', this.onClick)\n    },\n    unregisterHeader () {\n      this.header = null\n    },\n    onClick (e: MouseEvent) {\n      if (e.detail) this.header!.$el.blur()\n\n      this.$emit('click', e)\n\n      this.isReadonly || this.isDisabled || this.toggle()\n    },\n    toggle () {\n      /* istanbul ignore else */\n      if (this.content) this.content.isBooted = true\n      this.$nextTick(() => this.$emit('change'))\n    },\n  },\n\n  render (h): VNode {\n    return h('div', {\n      staticClass: 'v-expansion-panel',\n      class: this.classes,\n      attrs: {\n        'aria-expanded': String(this.isActive),\n      },\n    }, getSlot(this))\n  },\n})\n"],"sourceRoot":""}